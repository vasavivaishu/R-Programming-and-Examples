install.packages("xlsx")
install.packages("xlsx")
any(grepl("xlsx",installed.packages()))
library("xlsx")
library("rJava")
library("xlsxjars")
library("xlsx")
any(grepl("rJava",installed.packages()))
setwd("F:\MSBI Tutorial\03. Cortona Analytics\R and DataScience\Mine-R\data files")
getwd()
data <- read.xlsx("data files/input.xlsx", sheetIndex = 1)
print(data)
class(data)
install.packages("XML")
data()
library("XML")
library("methods")
result <- xmlParse(file = "data files/employees.xml")
print(result)
print(result)
rootnode <- xmlRoot(result)
rootnode
print(rootnode)
rootsize <- xmlSize(rootnode)
rootsize
print(rootnode)
rootsize
result <- xmlParse(file = "data files/employees.xml")
print(result)
result <- xmlParse(file = "data files/employees.xml")
result <- xmlParse(file = "data files/employees.xml")
print(result)
result <- xmlParse(file = "data files/employees.xml")
rootsize
print(rootnode[1])
# Get the first element of the first node.
print(rootnode[[1]][[1]])
print(rootnode[[1]][[2]])
print(rootnode[[1]][[1]])
print(rootnode[[1]][[5]])
print(rootnode[[3]][[2]])
class(rootnode)
xmldataframe <- xmlToDataFrame("data files/employees.xml")
print(xmldataframe)
class(xmldataframe)
xmldataframe$NAME
xmldataframe$sum(SALARAY)
xmldataframe$name
xmldataframe$NAME
library("rjson")
install.packages("jSonarR")
library("rjson")
install.packages("rjson")
library("rjson")
result <- fromJSON(file = "data files/employees.json")
result
json_data_frame <- as.data.frame(result)
json_data_frame
class(json_data_frame)
class(result)
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("RCurl")
install.packages("XML")
!is.installed("XML")
any(grepl("XML",installed.packages()))
any(grepl("stringr",installed.packages()))
install.packages("stringr")
any(grepl("plyr",installed.packages()))
any(grepl("RCurl",installed.packages()))
url <- "http://www.geos.ed.ac.uk/~weather/jcmb_ws/"
links <- getHTMLLinks(url)
links <- getHTMLLinks(url)
any(grepl("RCurl",installed.packages()))
any(grepl("XML",installed.packages()))
any(grepl("stringr",installed.packages()))
any(grepl("plyr",installed.packages()))
url <- "http://www.geos.ed.ac.uk/~weather/jcmb_ws/"
links <- getHTMLLinks(url)
links <- getHTMLLinks(url)
library(XML)
url <- "http://www.geos.ed.ac.uk/~weather/jcmb_ws/"
links <- getHTMLLinks(url)
library(rvest)
class(links)
filenames <- links[str_detect(links, "JCMB_2015")]
library(RCurl)
library(XML)
library(stringr)
library(plyr)
url <- "http://www.geos.ed.ac.uk/~weather/jcmb_ws/"
links <- getHTMLLinks(url)
filenames <- links[str_detect(links, "JCMB_2015")]
class(filenames)
filenames_list <- as.list(filenames)
class(filenames_list)
dog <- "The quick brown dog"
str_to_upper(dog)
str_to_lower(dog)
str_to_title(dog)
any(grepl("stringr",installed.packages()))
any(geprl("XML",installed.packages()))
any(grepl("XML",installed.packages()))
any(grepl("stringR",installed.packages()))
str_to_upper("i", "en") # English
str_to_upper("i", "tr") # Turkish
str_to_upper("i", "en") # English
numbers <- "1 and 2 and 4 and 456"
[0-9
num_loc <- str_locate_all(numbers, "[0-9]+")[[1]]
num_loc
str_sub(numbers, num_loc[, "start"], num_loc[, "end"])
text_loc <- invert_match(num_loc)
text_loc <- invert_match(num_loc)
text_loc
str_sub(numbers, text_loc[, "start"], text_loc[, "end"])
str_sub
pattern <- "a.b"
strings <- c("abb", "a.b")
strings
class(strings)
str_detect(strings, pattern)
str_detect(strings, fixed(pattern))
str_detect(strings, coll(pattern))
str_c("Letter: ", letters)
str_c("Letter", letters, sep = ": ")
str_c(letters, " is for", "...")
str_c(letters[-26], " comes before ", letters[-1])
str_c(letters, collapse = "")
str_c(letters)
str_c(letters, collapse = "")
str_c(letters, collapse = ", ")
str_c(c("a", NA, "b"), "-d")
str_c(str_replace_na(c("a", NA, "b")), "-d")
class(filenames_list)
}
downloadcsv <- function (mainurl,filename) {
filedetails <- str_c(mainurl,filename)
print(filedetails)
download.file(filedetails,filename)
}
filenames
class(filenames)
l_ply(filenames,downloadcsv,mainurl = "http://www.geos.ed.ac.uk/~weather/jcmb_ws/")
install.packages("plyr")
l_ply(filenames,downloadcsv,mainurl = "http://www.geos.ed.ac.uk/~weather/jcmb_ws/")
data
data()
library(plyr)
l_ply(filenames,downloadcsv,mainurl = "http://www.geos.ed.ac.uk/~weather/jcmb_ws/")
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
png(file = "city.jpg")
pie(x,labels)
pie(x,labels)
dev.off()
# Create data for the graph.
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
# Give the chart file a name.
png(file = "city.jpg")
# Plot the chart.
pie(x,labels)
# Save the file.
dev.off()
x <- c(21, 62, 10, 53)
labels <- c("London", "New York", "Singapore", "Mumbai")
png(file = "city_title_colours.jpg")
pie(x, labels, main = "City pie chart", col = rainbow(length(x)))
dev.off()
dev.off()
x <-  c(21, 62, 10,53)
labels <-  c("London","New York","Singapore","Mumbai")
piepercent<- round(100*x/sum(x), 1)
piepercent
png(file = "city_percentage_legends.jpg")
pie(x, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8,
fill = rainbow(length(x)))
# Save the file.
dev.off()
library(plotrix)
install.packages("plotrix")
library(plotrix)
x <-  c(21, 62, 10,53)
lbl <-  c("London","New York","Singapore","Mumbai")
png(file = "3d_pie_chart.jpg")
pie3D(x,labels = lbl,explode = 0.1, main = "Pie Chart of Countries ")
# Save the file.
dev.off()
pie3D(x,labels = lbl,explode = 0.6, main = "Pie Chart of Countries ")
# Save the file.
pie3D(x,labels = lbl,explode = 0.1, main = "Pie Chart of Countries ")
pie3D(x,labels = lbl,explode = 0.01, main = "Pie Chart of Countries ")
pie3D(x,labels = lbl,explode = 0.01, main = "Pie Chart of Countries ")
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8,
fill = rainbow(length(x)))
# Save the file.
dev.off()
pie3D(x,labels = lbl,explode = 0.01, main = "Pie Chart of Countries ")
dev.off()
pie(x, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("London","New York","Singapore","Mumbai"), cex = 0.8,
fill = rainbow(length(x)))
H <- c(7,12,28,3,41)
png(file = "barchart.png")
barplot(H)
dev.off()
H <- c(7,12,28,3,41)
class(H)
help(H)
??H
M <- c("Mar","Apr","May","Jun","Jul")
png(file = "barchart_months_revenue.png")
barplot(H,names.arg = M,xlab = "Month",ylab = "Revenue",col = "blue",
main = "Revenue chart",border = "red")
# Save the file.
dev.off()
input <- mtcars[,c('mpg','cyl')]
print(head(input))
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
result.mean <- mean(x)
print(result.mean)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
result.mean <-  mean(x,trim = 0.3)
print(result.mean)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
result.mean <- mean(x)
print(result.mean)
print 4.2
prin(4.2)
print(4.2)
x.sum()
sum(x)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5,NA)
result.mean <-  mean(x)
print(result.mean)
result.mean <-  mean(x,na.rm = TRUE)
print(result.mean)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5,NA1)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5,NA)
result.mean <-  mean(x)
print(result.mean)
# Find mean dropping NA values.
result.mean <-  mean(x,na.rm = TRUE)
print(result.mean)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
median.result <- median(x)
print(median.result)
x <- c(12,7,3)
median.result <- median(x)
print(median.result)
x <- c(12,7,3,4.2,18,2,54,-21,8,-5)
median.result <- median(x)
print(median.result)
